apiVersion: v1
data:
  CHAIN_PARAMS: |
    {
      "bootstrap_mutez": "{{ .Values.protocol.bootstrap_mutez }}",
      "bootstrap_peers": {{ toJson .Values.bootstrap_peers }},
      "chain_name": "{{ .Values.chain_name }}",
      "genesis_block": "{{ .Values.genesis.genesis_chain_id }}",
      "timestamp": "{{ .Values.genesis.bootstrap_timestamp }}",
      "zerotier_in_use": {{ .Values.zerotier_in_use }}
    }
kind: ConfigMap
metadata:
  name: tezos-config
  namespace: {{ .Release.Namespace }}
---
apiVersion: v1
data:
  CHAIN_NAME: "{{ .Values.chain_name }}"
  NETWORK_ID: "{{ .Values.zerotier_config.zerotier_network }}"
  ZTAUTHTOKEN: "{{ .Values.zerotier_config.zerotier_token }}"
kind: ConfigMap
metadata:
  name: zerotier-config
  namespace: {{ .Release.Namespace }}
---
{{- /*

https://stackoverflow.com/questions/61153730/creating-a-filtered-list-using-helm-template-helpers

Helm templating is very string based and so is unable to do common operations
like mapping over a list

The BOOTSTRAP_ACCOUNTS secrets variable is essentially the following:

```python3
" ".join(account.name for account in Values.accounts if account.bootstrap)
```

So to recreate in helm, we do the following:

1. First, use helms text templating to build a yaml list (see `define "boostrapAccounts"`)
2. Then, use the builtin `fromYaml` function to get the list of account names
3. Use the `join` builtin function

Theres one caveat in that `fromYaml` expects an object, so we cant directly
make a yaml list. So we simply make dummmy keys and then call `values` to get
the list of values, which is the list we want

*/ -}}

{{- define "bootstrapAccounts" }}
value:
  {{- range $i, $account := $.Values.accounts }}
    {{- if $account.bootstrap }}
{{ $i }}: {{ $account.name | quote }}
    {{- end }}
  {{- end }}
{{- end -}}

apiVersion: v1
data:
  BOOTSTRAP_ACCOUNTS: |
{{ include "bootstrapAccounts" . | fromYaml | values | join " " | b64enc | indent 4 }}
{{- if .Values.is_invitation }}
  KEYS_TYPE: |
{{ "public" | b64enc | indent 4 }}
  {{- range $account := $.Values.accounts }}
    {{- if not $account.private }}
{{ $account.name | indent 2 }}_public_key: |
{{ $account.key | b64enc | indent 4 }}
    {{- end }}
  {{- end }}
{{- else }}
  KEYS_TYPE: |
{{ "secret" | b64enc | indent 4 }}
  {{- range $account := $.Values.accounts }}
    {{- if $account.private }}
{{ $account.name | indent 2 }}_secret_key: |
{{ $account.key | b64enc | indent 4 }}
    {{- end }}
  {{- end }}
{{- end }}
kind: Secret
metadata:
  name: tezos-secret
  namespace: {{ .Release.Namespace }}
