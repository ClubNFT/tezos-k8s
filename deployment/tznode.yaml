apiVersion: v1
kind: Namespace
metadata:
  name: "tqtezos"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: tezos-pv-claim
  namespace: "tqtezos"
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  selector:
    matchLabels:
      storage-type: var-files
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: tezos-config
  namespace: "tqtezos"
data:
  parameters.json: |
    {{
      "bootstrap_accounts": [
        [
          "edpkubXzL1rs3dQAGEdTyevfxLw3pBCTF53CdWKdJJYiBFwC1xZSct",
          "4000000000000"
        ],
        [
          "edpkvUS1z9QGXr6f89dNF5WyeRCFuK6PYWYrMHcpU9kQ2TevD66fDG",
          "4000000000000"
        ],
        [
          "edpktezaD1wnUa5pT2pvj1JGHNey18WGhPc9fk9bbppD33KNQ2vH8R",
          "4000000000000"
        ]
      ],
      "preserved_cycles": 2,
      "blocks_per_cycle": 8,
      "blocks_per_commitment": 4,
      "blocks_per_roll_snapshot": 4,
      "blocks_per_voting_period": 64,
      "time_between_blocks": [
        "10",
        "20"
      ],
      "endorsers_per_block": 32,
      "hard_gas_limit_per_operation": "800000",
      "hard_gas_limit_per_block": "8000000",
      "proof_of_work_threshold": "-1",
      "tokens_per_roll": "8000000000",
      "michelson_maximum_type_size": 1000,
      "seed_nonce_revelation_tip": "125000",
      "origination_size": 257,
      "block_security_deposit": "512000000",
      "endorsement_security_deposit": "64000000",
      "endorsement_reward": [ "2000000" ],
      "cost_per_byte": "1000",
      "hard_storage_limit_per_operation": "60000",
      "test_chain_duration": "1966080",
      "quorum_min": 2000,
      "quorum_max": 7000,
      "min_proposal_quorum": 500,
      "initial_endorsers": 1,
      "delay_per_missing_endorsement": "1",
      "baking_reward_per_endorsement": [ "200000" ]
    }}
  config.json: |
    {config_json}
---
apiVersion: v1
kind: Service
metadata:
  name: tezos-rpc
  namespace: "tqtezos"
spec:
  ports:
  - port: 8732
  selector:
    app: tezos-rpc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tezos-node
  namespace: "tqtezos"
spec:
  selector:
    matchLabels:
      app: tezos-node
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: tezos-node
    spec:
      containers:
      - image: {docker_image}
        imagePullPolicy: Always
        name: tezos-node
        command: ["/usr/local/bin/tezos-node"]
        args: ["run", "--config-file",  "/etc/tezos/config.json"]
        ports:
        - containerPort: 8732
          name: tezos-rpc
          containerPort: 8733
          name: tezos-net
        volumeMounts:
        - name: config-volume
          mountPath: /etc/tezos
        - name: var-volume
          mountPath: /var/tezos
      volumes:
      - name: config-volume
        configMap:
          name: tezos-config
      - name: var-volume
        persistentVolumeClaim:
          claimName: tezos-pv-claim
---
apiVersion: batch/v1
kind: Job
metadata:
  name: activate-job
spec:
  template:
    metadata:
      name: activate-job
    spec:
      initContainers:
      - name: activate
        image: {docker_image}
        command: ["/usr/local/bin/tezos-client"]
        args: ["-A", "tezos-rpc", "-P", "8732", "-d", "/var/tezos/client", "-l", "--block", "genesis", "activate", "protocol", "{protocol_hash}", "with", "fitness", "25", "and", "key", "genesis", "and", "parameters", "/etc/tezos/parameters.json"]
      - name: bake
        image: {docker_image}
        command: ["/usr/local/bin/tezos-client"]
        args["-A", "tezos-rpc", "-P", "8732", "-d", "/var/tezos/client", "-l", "bake", "for", "baker", "--minimal-timestamp"]
      containers:
      - name: job-done
        image: busybox
        command: ['sh', '-c', 'echo "private chain activated']
      restartPolicy: Never
      volumes:
      - name: var-volume
        persistentVolumeClaim:
          claimName: tezos-pv-claim
