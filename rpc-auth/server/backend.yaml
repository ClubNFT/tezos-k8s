apiVersion: v1
kind: Service
metadata:
  name: redis-service
  namespace: tqtezos
  labels:
    app: redis
spec:
  ports:
    - name: redis
      port: 6379
  selector:
    app: redis
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: redis-pv-claim
  namespace: tqtezos
  labels:
    app: redis
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 5Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: tqtezos
  labels:
    app: redis
spec:
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
        - name: master
          image: redis
          readinessProbe:
            exec:
              command:
                - sh
                - -c
                - "redis-cli -h $(hostname) ping"
            initialDelaySeconds: 5
            timeoutSeconds: 5
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - "redis-cli -h $(hostname) ping"
            initialDelaySeconds: 5
            periodSeconds: 3
          # resources:
          #   requests:
          #     cpu: 100m
          #     memory: 100Mi
          ports:
            - containerPort: 6379
          volumeMounts:
            - mountPath: /data
              name: redis-data
      volumes:
        - name: redis-data
          persistentVolumeClaim:
            claimName: redis-pv-claim
---
apiVersion: v1
kind: Service
metadata:
  name: rpc-auth-service
  namespace: tqtezos
spec:
  selector:
    app: rpc-auth
  ports:
    - port: 8080
      targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rpc-auth
  namespace: tqtezos
spec:
  selector:
    matchLabels:
      app: rpc-auth
  template:
    metadata:
      labels:
        app: rpc-auth
    spec:
      containers:
        - name: rpc-auth
          image: rpc-auth
          imagePullPolicy: Never
          ports:
            - containerPort: 8080
          env:
            - name: REDIS_HOST
              value: redis-service
            - name: REDIS_PORT
              value: "6379"
            - name: TEZOS_RPC
              value: tezos-rpc
            - name: TEZOS_RPC_PORT
              value: "8732"
            - name: HOST_NODE_ADDRESS
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: rpc-auth-ingress
  namespace: tqtezos
  annotations:
    # nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/use-regex: "true"
spec:
  rules:
    - http:
        paths:
          # Client provides chain id and gets back a nonce
          - path: /vending-machine/(.*)
            pathType: Exact
            backend:
              service:
                name: rpc-auth-service
                port:
                  number: 8080
          # Client provides signed data and gets back a secret url
          - path: /vending-machine
            pathType: Exact
            backend:
              service:
                name: rpc-auth-service
                port:
                  number: 8080
          # Client uses secret url to access the RPC endpoint
          - path: /tezos-node-rpc/(.*)
            pathType: Exact
            backend:
              service:
                name: rpc-auth-service
                port:
                  number: 8080
---

